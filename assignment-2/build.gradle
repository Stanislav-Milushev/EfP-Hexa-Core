plugins {
    // This Gradle is defined as a library. This way we can consume and expose dependencies using the keyword 'api'.
    // Libraries defined in this module using the 'api' keyword are available to all dependent modules (modules that
    // depend on 'assignment-2'
    id 'java-library'

    // This plugin enables us to expose test classes as fixtures to other projects (next assignments)
    // https://docs.gradle.org/current/userguide/java_testing.html#sec:java_test_fixtures
    // In our case we mainly share the SAT problems along with the utility classes and abstract test class so that the
    // solver implementations can be tested in each subsequent assignment
    id 'java-test-fixtures'
}

group 'org.mbe.sat.assignment'
version '1.0-SNAPSHOT'

// This defines an additional Java source folder which contains the interfaces that must be implemented in this
// assignments as well as the given CNF formula model classes.
sourceSets {
    srcFramework {
        main {
            java {
                srcDir 'src-framework/main/java'
            }
        }
        testFixtures {
            java {
                srcDir 'src-framework/testFixtures/java'
            }
            resources {
                srcDir 'src-framework/testFixtures/resources'
            }
        }
    }
}

// Defines from where all of the dependency below are downloaded
repositories {
    mavenCentral()
}

dependencies {

    //Custom dependencies
    // https://mvnrepository.com/artifact/jfree/jfreechart
    implementation group: 'jfree', name: 'jfreechart', version: '1.0.13'

    // Provides useful set operations that are mainly used by the CNF formula model
    // https://github.com/google/guava
    // https://guava.dev/
    api 'com.google.guava:guava:29.0-jre'

    // Logging Framework "logback" in combination with SLF4J. Logback and SLF4J are both included in this dependency
    // This logger is used in the "testFixtures" and in some of the solution sources for the next assignments. The
    // logger is configured using the "logback.xml" in the corresponding source set resources folder.
    // https://github.com/qos-ch/logback
    // http://logback.qos.ch/
    api 'ch.qos.logback:logback-classic:1.2.3'

    // A library of utilities to assist with developing IO functionality like reading and writing files. We use it to
    // read the pre-defined DIMACS files that can be used for testing
    // http://commons.apache.org/proper/commons-io/
    api group: 'commons-io', name: 'commons-io', version: '2.8.0'

    // Used to parse the "_index.json" file that contains SAT problem definitions which can be used for testing. Since
    // this library is only used in the "testFixtures" source set, this dependency is added
    // using "testFixturesImplementation". This way the dependency scope is limited to the "testFixtures" source set.
    // https://github.com/google/gson
    testFixturesImplementation 'com.google.code.gson:gson:2.8.6'

    // Use JUnit 5 Test Framework for unit test.
    // https://junit.org/junit5/
    // https://github.com/junit-team/junit5
    api 'org.junit.jupiter:junit-jupiter-api:5.7.0'
    api 'org.junit.jupiter:junit-jupiter-engine:5.7.0'
    api 'org.junit.jupiter:junit-jupiter-params:5.7.0'

    // Provides matchers that make JUnit assertions easier to read
    // https://github.com/hamcrest/JavaHamcrest
    // http://hamcrest.org/JavaHamcrest/
    api group: 'org.hamcrest', name: 'hamcrest', version: '2.2'

    // Our parser for DIMACS files
    api files('ext-libs/framework-parser-bin-1.0.jar')
}
